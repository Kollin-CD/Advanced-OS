Dear Colleague,

As you may already know, I am overseeing the development of a new
parallel programming library for distributed machines called gtmpi.
I asked one of my developers to implement several barrier
synchronization and run some experiments to help us decide which to
adopt.  The results were a little surprising to me, and I was hoping
that I could get your to share your thoughts on them.

In summary, we compared the algorithms presented in the famous
Mellor-Crummey Scott paper by measuring how long it took for a given
number of threads to cross 10^5 barriers. All experiments were run on
a dedicated cluster with one process assigned to each node. 

Details individual nodes are attached along with the data from the experiments.

Looking forward to your insight!

Response:

I see that you are using an InfiniBand and it is very well optimized for distributed systems so
I am a little shocked that the barrier implementations started to converge as threads and nodes
increased. I suspect that the counter is the best at low threads and nodes because the
Infiniband can quickly pass information and contention is not a problem among nodes. But
contention will increase and I suspect that some contention is seen at around the 13th thread.
Overall I think you need to try the experiment with more nodes to see the effect. I would
suspect dissemniation barrier or tournament barrier for this type of network would work best at
larger scales because the barrier works independently of other nodes and they have log N 
rounds. My recommendation would definitely be to try larger scale tests. 